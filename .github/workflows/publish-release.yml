name: Publish Release

on:
  push:
    branches: [main]
    paths:
      - 'package.json'  # Only trigger when package.json changes

permissions:
  contents: write
  packages: write

# Prevent multiple releases from running at the same time
concurrency:
  group: release
  cancel-in-progress: false

jobs:
  check-and-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Check if new version
        id: check
        run: |
          # Get current version from package.json
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Package.json version: $CURRENT_VERSION"
          
          # Check if this version tag already exists
          if git rev-parse "v$CURRENT_VERSION" >/dev/null 2>&1; then
            echo "Tag v$CURRENT_VERSION already exists"
            
            # Check if it's published to npm
            NPM_VERSION=$(npm view payload-plugin-newsletter@$CURRENT_VERSION version 2>/dev/null || echo "")
            
            if [ -z "$NPM_VERSION" ]; then
              echo "Tag exists but not on npm - will retry publish"
              echo "should_publish=true" >> $GITHUB_OUTPUT
              echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
              echo "skip_tag=true" >> $GITHUB_OUTPUT
            else
              echo "Version already published to npm - skipping"
              echo "should_publish=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "Version v$CURRENT_VERSION is new - will publish"
            echo "should_publish=true" >> $GITHUB_OUTPUT
            echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
            echo "skip_tag=false" >> $GITHUB_OUTPUT
          fi
          
      - name: Setup environment
        if: steps.check.outputs.should_publish == 'true'
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.1.0
          
      - uses: actions/setup-node@v4
        if: steps.check.outputs.should_publish == 'true'
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Install dependencies
        if: steps.check.outputs.should_publish == 'true'
        run: bun install
        
      - name: Run tests
        if: steps.check.outputs.should_publish == 'true'
        run: bun test
        
      - name: Build
        if: steps.check.outputs.should_publish == 'true'
        run: bun run build
        
      - name: Create git tag
        if: steps.check.outputs.should_publish == 'true' && steps.check.outputs.skip_tag != 'true'
        run: |
          VERSION=${{ steps.check.outputs.version }}
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag -a "v$VERSION" -m "Release v$VERSION"
          git push origin "v$VERSION"
          
      - name: Publish to npm
        if: steps.check.outputs.should_publish == 'true'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Create GitHub Release
        if: steps.check.outputs.should_publish == 'true' && steps.check.outputs.skip_tag != 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.check.outputs.version }}
          name: v${{ steps.check.outputs.version }}
          body: |
            ## Release v${{ steps.check.outputs.version }}
            
            See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for details.
            
            ### Installation
            ```bash
            npm install payload-plugin-newsletter@${{ steps.check.outputs.version }}
            ```
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}